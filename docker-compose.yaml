services:
  image-search:
    container_name: image-search
    image: "${DOCKER_REGISTRY}/image-search:0.0.1"
    build:
      context: .
      dockerfile: services/image_search/Dockerfile
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env

  embedding:
    container_name: embedding
    image: "${DOCKER_REGISTRY}/embedding:0.0.1"
    build:
      context: .
      dockerfile: services/real-time_compute_embeddings/Dockerfile
    restart: always
    ports:
      - "8080:8080"
  
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
      
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
